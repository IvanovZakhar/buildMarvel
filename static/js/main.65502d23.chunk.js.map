{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/yana.jpg","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundaries/ErrorBoundaries.js","resources/img/vision.png","components/pages/MainPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","objectFit","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","images","ComicsList","comicsList","setComicsList","setOffset","charEnded","setCharEnded","useEffect","onRequest","onComicsListLoaded","newComicsList","ended","length","then","arr","item","i","imgStyle","renderItems","errorMessage","spinner","onClick","AppBanner","avengers","avengersLogo","ComicsPage","View","href","RandomChar","setChar","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","content","mjolnir","CharList","props","charList","newItemLoading","setItemLoading","initial","onCharListLoaded","newCharList","itemRefs","useRef","focusOnItem","current","forEach","classList","remove","add","focus","console","log","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundaries","state","errorInfo","this","setState","children","Component","MainPage","selectedChar","decoration","Page404","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","App","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.65502d23.chunk.js","sourcesContent":["import './appHeader.scss';\nimport {Link, NavLink} from 'react-router-dom';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                    end\n                    style = {({ isActive }) => ({color: isActive ? '#9f0013' : 'inherit'})} \n                     to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink \n\n                    style = {({ isActive }) => ({color: isActive ? '#9f0013' : 'inherit'})} \n                     to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{display: \"block\", width: \"250px\", height: \"250px\", \r\n        objectFit: 'contain', margin: \"0 auto\" }} alt=\"error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=baaab7750b9c96f0a5da18949146680e';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n   \r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n       return{\r\n        id: comics.id,\r\n        title: comics.title,\r\n        description: comics.description || 'There is no description',\r\n        pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n        language: comics.textObjects.language || 'en-us',\r\n        price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n        img: comics.images[0] ? `${comics.images[0].path}.${comics.images[0].extension}` : 'none'\r\n       } \r\n    }\r\n\r\n    return {loading, error, getCharacter, getAllCharacters, clearError, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json'}) => {\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            \r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {loading, request, error, clearError}\r\n\r\n}","export default __webpack_public_path__ + \"static/media/yana.d11f36ab.jpg\";","import './comicsList.scss';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport img from '../../resources/img/yana.jpg'\n\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [offset, setOffset] = useState(8)\n    const {loading, error, getAllComics} = useMarvelService();\n    const [charEnded, setCharEnded] = useState(false);\n\n        useEffect(() => {\n            onRequest(offset);\n        }, []) \n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList(comicsList => [...comicsList, ...newComicsList])\n        setOffset(offset => offset + 8)\n        setCharEnded(charEnded => ended)\n    }\n\n    const onRequest = (offset) => {\n        getAllComics(offset)\n        .then(onComicsListLoaded)\n    }\n\n    function renderItems(arr){\n        const items = arr.map((item, i) => {\n         \n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'none') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return (\n                    <li key={i} className=\"comics__item\">\n                        <Link to={`/comics/${item.id}`}>\n                            <img style={imgStyle} \n                                 src={item.img === 'none' ? img : item.img} \n                                 alt={item.title} \n                                 className=\"comics__item-img\"/>\n                            <div className=\"comics__item-name\">{item.title}</div>\n                            <div className=\"comics__item-price\">{item.price ? `${item.price}$` : 'Not on sale'}</div>\n                        </Link>\n                    </li>\n                    )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {items}\n            {errorMessage}\n            {spinner}\n            <button\n                 onClick={() => onRequest()} \n                 className=\"button button__main button__long\"\n                 style={{'display': charEnded ? 'none' : 'block'}}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n    \n    const [char, setChar] = useState({});\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(()=> {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n        return () => {\n            clearInterval(timerId)\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char)\n    }\n\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={() => updateChar()} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n\n}\n\nconst View = ({char}) => {\n    let {name, description, thumbnail, homepage, wiki} = char;\n    // if(description.length >= 230){\n       \n    //    description = `${description.slice(0, 240)}...`\n    // } else if (description.length === 0){\n    //     description = 'Нет описания'\n    // }\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n   \n    return (\n            <div className=\"randomchar__block\">\n                <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n                <div className=\"randomchar__info\">\n                    <p className=\"randomchar__name\">{name}</p>\n                    <p className=\"randomchar__descr\">{description}</p>\n                    <div className=\"randomchar__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setChar] = useState([]);\n    const [newItemLoading, setItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n\n    \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() =>{\n        onRequest(offset, true);\n    }, [])\n\n\n\n    const onRequest = (offset, initial) => {\n        initial ? setItemLoading(false) : setItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        setChar(charList => [...charList, ...newCharList])\n        setItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended)\n    }\n\n\n    const itemRefs = useRef([]);\n\n\n   const focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет бОльшего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    function renderItems(arr) {\n        console.log(arr)\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n\n\n        \n        const items = renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    \n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from '../skeleton/Skeleton'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n    const {error, loading, getCharacter, clearError} = useMarvelService();\n\n\n    useEffect(() => {\n        updateChar();\n    }, [props.charId])\n    \n\n\n    const updateChar = () => {\n        const {charId} = props;\n        if(!charId){\n            return;\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);  \n    }\n\n\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {errorMessage}\n                {spinner}\n                {content}\n                {skeleton}\n                \n            </div>\n        )\n    \n}\n\nconst View = ({char}) => {\n\n   const {name, description, thumbnail, homepage, wiki, comics} = char;\n    \n   let imgStyle = {'objectFit' : 'cover'};\n   if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n       imgStyle = {'objectFit' : 'contain'};}\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt=\"thumbnail\"  style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {comics.length > 0 ? null : 'This is no comics with this character'}\n                    {\n                        comics.map((item, i) => {\n                            // eslint-disable-next-line\n                            if(i > 9) return;\n                    \n                            return(\n                            <li key={i} className=\"char__comics-item\">\n                               {item.name}\n                            </li>\n                            )\n                        })\n                    }\n                </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundaries extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n    \r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo)\r\n \r\n        this.setState({error: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n         \r\n       \r\n       return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundaries;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundaries from \"../errorBoundaries/ErrorBoundaries\";\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }    \r\n\r\n    return (\r\n    <>\r\n        <ErrorBoundaries>\r\n                <RandomChar/>\r\n        </ErrorBoundaries>\r\n    \r\n        <div className=\"char__content\">\r\n            <ErrorBoundaries>\r\n                    <CharList onCharSelected = {onCharSelected}/>\r\n            </ErrorBoundaries>\r\n            \r\n            <ErrorBoundaries>\r\n                <CharInfo charId={selectedChar}/>\r\n            </ErrorBoundaries>\r\n            \r\n        </div>\r\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            <ErrorMessage/>\r\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page doesn't exist</p>\r\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px'}} to=\"/\">Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import './singleComic.scss';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\n\r\n\r\nconst SingleComicPage = () => {\r\n\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {error, loading, getComic, clearError} = useMarvelService();\r\n    \r\n    useEffect(() => {\r\n        updateComic();\r\n    }, [comicId])\r\n    \r\n\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);  \r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount, img, language, price} = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={img} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","import AppHeader from \"../appHeader/AppHeader\";\nimport {MainPage, ComicsPage, Page404, SingleComicPage} from \"../pages/index\"\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\nconst App = () =>{\n    \n\n           \n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={<MainPage/>}/>\n                        <Route path=\"/comics\" element={ <ComicsPage/>}/>\n                        <Route path=\"*\" element={<Page404/>}/>\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage/>}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM\n    .createRoot(document.getElementById('root'))\n    .render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n\n\n"],"sourceRoot":""}